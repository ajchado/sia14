# Generated by Django 3.1.7 on 2021-03-27 10:00

import datetime
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_name', models.CharField(max_length=50)),
                ('event_description', models.CharField(max_length=50)),
                ('event_type', models.CharField(max_length=50)),
                ('event_fee', models.FloatField(default=0)),
                ('number_of_reviews', models.IntegerField(default=0)),
                ('number_of_participants', models.IntegerField(default=0)),
                ('number_of_upvotes', models.IntegerField(default=0)),
                ('start_date', models.DateField(default=datetime.datetime.now)),
                ('end_date', models.DateField(default=datetime.datetime.now)),
                ('start_time', models.TimeField(default=django.utils.timezone.now)),
                ('end_time', models.TimeField(default=django.utils.timezone.now)),
                ('isCanceled', models.BooleanField(default=False)),
                ('isDeleted', models.BooleanField(default=False)),
                ('isFinished', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'event',
            },
        ),
        migrations.CreateModel(
            name='EventRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255)),
                ('date_sent', models.DateField(default=datetime.datetime.now)),
                ('time_sent', models.TimeField(default=django.utils.timezone.now)),
                ('request_type', models.CharField(max_length=50)),
                ('isPending', models.BooleanField(default=True)),
                ('isConfirmed', models.BooleanField(default=False)),
                ('isDeleted', models.BooleanField(default=False)),
                ('event', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='event_requests', to='webapp.event')),
            ],
            options={
                'db_table': 'event_request',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notif_title', models.CharField(max_length=50)),
                ('notif_date', models.DateField(default=datetime.datetime.now)),
                ('notif_content', models.CharField(max_length=250)),
                ('notif_type', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'notification',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('middle_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('username', models.CharField(max_length=50)),
                ('password', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=50)),
                ('register_date', models.DateField(default=datetime.datetime.now)),
                ('status', models.BooleanField(default=True)),
                ('notification', models.ManyToManyField(to='webapp.Notification')),
            ],
            options={
                'db_table': 'user',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('content', models.CharField(max_length=255)),
                ('rating', models.FloatField(default=0)),
                ('date_created', models.DateField(default=datetime.datetime.now)),
                ('author', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='webapp.user')),
            ],
            options={
                'db_table': 'review',
            },
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255)),
                ('date_sent', models.DateField(default=datetime.datetime.now)),
                ('time_sent', models.TimeField(default=django.utils.timezone.now)),
                ('request_type', models.CharField(max_length=50)),
                ('isPending', models.BooleanField(default=True)),
                ('isConfirmed', models.BooleanField(default=False)),
                ('isDeleted', models.BooleanField(default=False)),
                ('sender', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='webapp.user')),
            ],
            options={
                'db_table': 'request',
            },
        ),
        migrations.CreateModel(
            name='Organizer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('events', models.ManyToManyField(related_name='organizer', to='webapp.Event')),
                ('organizer', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='user_organizer', to='webapp.user')),
                ('request', models.ManyToManyField(to='webapp.EventRequest')),
            ],
            options={
                'db_table': 'organizer',
            },
        ),
        migrations.AddField(
            model_name='eventrequest',
            name='sender',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='webapp.user'),
        ),
        migrations.AddField(
            model_name='event',
            name='participants',
            field=models.ManyToManyField(related_name='participants', to='webapp.User'),
        ),
        migrations.AddField(
            model_name='event',
            name='reviews',
            field=models.ManyToManyField(to='webapp.Review'),
        ),
        migrations.CreateModel(
            name='Administrator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admin', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='webapp.user')),
            ],
            options={
                'db_table': 'administrator',
            },
        ),
    ]
